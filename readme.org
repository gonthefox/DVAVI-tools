* DVAVI-tools

  dvavi2srt.py

  DV-AVI 形式のビデオファイルのサブコードデータから撮影日時およびタイムコードを取得し、字幕ファイルを生成する。

** DV-AVI file format

   AVI ファイルは Resource Interchange File Format (RIFF) というファイ
   ル形式に従っている。これは1991年にマイクロソフトとIBMが提案し、
   Windows 3.1のマルチメディアファイルのデフォルトフォーマットとして採
   用された。

   これは更に、エレクトロニック・アーツが1985年に策定した Interchange
   File Format (IFF)に基づいている。

   RIFFファイルの基本的構成であるチャンクはは以下の通り(field名は正式
   なものではない)
   

   | field | length | description                              |
   |-------+--------+------------------------------------------|
   | ID    | 4 Byte | ASCII 文字                               |
   | SIZE  | 4 Byte | 符号なし32ビット整数                     |
   | DATA  | n Byte | 可変長フィールド(SIZEで指定された大きさ) |

   チャンクのIDが'RIFF'または'LIST'のとき、DATAには別のチャンクを含む
   ことができる。つまり階層構成を取ることができる。
   
   最上位層のチャンクのIDは必ず'RIFF'である。DATAの最初の4 Byteには
   FourCCという識別子が入ることがある。


   実際のAVIファイルは次のような構成になっている。
   デジタルインターフェース(iLink)に出力されるデータの１フレームに相当
   する部分がID '01wb'のチャンクに含まれる。120,000 Byteのデータである。

   #+begin_example
   
   RIFF (AVI) ---\
                 |
                 \--- LIST (hdrl) ---\
                                     |
                                     \--- avih
                                     |
                                     \--- LIST(strl)---\
                                     |                  |
                                     |                  \--- strh (vids)
                                     |                  |
                                     |                  \--- strf
                                     |                  |
                                     |                  \--- indx
                                     |
                                     |
                                     |
                                     \--- LIST(strl)---\
                                     |                  |
                                     |                  \--- strh(auds)
                                     |                  |
                                     |                  \--- strf
                                     |                  |
                                     |                  \--- indx
                                     |
                                     |
                                     \--- LIST(odml)---\
                                     |                 |
                                     |                 \--- dmlh
                                     |                 |
                                     |                 \--- JUNK
                                     |
                                     \--- LIST(movi)---\
                                                       |
                                                       \--- 00dw
                                                       |
                                                       \--- 01wb
                                                       |
                                                       \--- 00dw
                                                       |
                                                       \--- 01wb
                                                       |
                                                       \--- 00dw
                                                       |
                                                       \--- 01wb

                                           (フレームの数だけ00dw, 01wbを繰り返す)

                                                       \--- ix00
                                                       |
                                                       \--- ix01

   
   #+end_example

** arguments
   
   'i': avifile: DV-AVI input File. このプログラムの入力ファイル。
   'r': RECDATE: RECDATE output file. SUBCODEから読み取ったRECDATEをテキストで出力する
   't': TIMECODE: TIMECODE output file. SUBCODEから読み取ったTIMECODEをテキストで出力する

** 処理概要   

   DV-AVIファイルをバイナリデータとして読み込む

   #+BEGIN_SRC python
   file   = open(args.avifle, 'rb')
   data   = file.read()
   buffer = io.BytesIO(data)
   #+END_SRC

   有効なRIFFファイルかどうかを判断する

   base()関数内でChunk() クラスのオブジェクトにbufferの内容を読み込む
   FourCCを調べb'RIFFかどうかをチェックしている

   #+BEGIN_SRC python
   buffer.readinto(test) # test = Chunk()
   if not test.FourCC == b'RIFF':
      raise Exception("Not a valid RIFF file.")
   #+END_SRC

* TIPS
  ディレクトリ内の *avi ファイルの 撮影日時情報を一覧する
  -I {} はプレースフォルダ

  find /PATH-TO-AVI-FILES/. | xargs -I {} python -a {} -r tmp1 -t tmp2


